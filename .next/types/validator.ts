// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types


import type { NextApiHandler } from "next/types.js"

type PagesPageConfig = {
  default: React.ComponentType<any> | ((props: any) => React.ReactNode | Promise<React.ReactNode> | never | void)
  getStaticProps?: (context: any) => Promise<any> | any
  getStaticPaths?: (context: any) => Promise<any> | any
  getServerSideProps?: (context: any) => Promise<any> | any
  getInitialProps?: (context: any) => Promise<any> | any
  /**
   * Segment configuration for legacy Pages Router pages.
   * Validated at build-time by parsePagesSegmentConfig.
   */
  config?: {
    amp?: boolean | 'hybrid' | string // necessary for JS
    maxDuration?: number
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    regions?: string[]
  }
}

type ApiRouteConfig = {
  default: (req: any, res: any) => ReturnType<NextApiHandler>
  config?: {
    api?: {
      bodyParser?: boolean | { sizeLimit?: string }
      responseLimit?: string | number | boolean
      externalResolver?: boolean
    }
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    maxDuration?: number
  }
}






// Validate ../../pages/dashboard/index.tsx
{
  type __IsExpected<Specific extends PagesPageConfig> = Specific
  const handler = {} as typeof import("../../pages/dashboard/index.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../pages/index.tsx
{
  type __IsExpected<Specific extends PagesPageConfig> = Specific
  const handler = {} as typeof import("../../pages/index.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../pages/public/citizens.tsx
{
  type __IsExpected<Specific extends PagesPageConfig> = Specific
  const handler = {} as typeof import("../../pages/public/citizens.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../pages/api/auth/login.ts
{
  type __IsExpected<Specific extends ApiRouteConfig> = Specific
  const handler = {} as typeof import("../../pages/api/auth/login.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../pages/api/auth/register.ts
{
  type __IsExpected<Specific extends ApiRouteConfig> = Specific
  const handler = {} as typeof import("../../pages/api/auth/register.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../pages/api/citizens/public/stats.ts
{
  type __IsExpected<Specific extends ApiRouteConfig> = Specific
  const handler = {} as typeof import("../../pages/api/citizens/public/stats.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../pages/api/citizens/stats.ts
{
  type __IsExpected<Specific extends ApiRouteConfig> = Specific
  const handler = {} as typeof import("../../pages/api/citizens/stats.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../pages/api/citizens/upload.ts
{
  type __IsExpected<Specific extends ApiRouteConfig> = Specific
  const handler = {} as typeof import("../../pages/api/citizens/upload.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}


